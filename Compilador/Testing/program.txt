                               /% Casos de prueba Grupo 2 %/

/% Programa sin errores. %/

    LONGINT x , y , z , f , l;
    FLOAT w;
    LONGINT id_1,id_2,id_3,id_4,id_5,id_6,id_7,id_8,id_8,id_9,id_10,id_11,id_12;
    LONGINT longint_negativo;

    x = 3_l;
    y = 5.0f+3;
    w =  3_l / 5.0f+3;
    id_1 = 2_l * 3_l;
    float_negativo = -7.3;
    longint_negativo = -715_l;
    x = 2_l - -3_l;

    PROC var (INT id_2, INT id_3) NA = 1_l , SHADOWING = TRUE
    {
        aux = 2_l;
        WHILE (id_1 <= 12.) LOOP
        {
            IF (id_1 !=12.)
               OUT ("cadena de caracteres");
            ELSE
                id_1 = id_12 + 1_l;
            END_IF;
        };
    };

    var(id_2,id_3);

    IF (id_3 == 2_l + 3_l)
        id_2 = 4_l;
    END_IF;




/% Errores Lexicos contemplados.%/
    FLOATH x , y , z ;
    x = 5;
    x = 2222222222_l;
    estavariabletienemuchoscaracteres = 22_l;

    % & #       /% Caracteres invalidos.%/
    

/% Errores Sintacticos contemplados.%/

    x = 2147483648_l;
    y = ;
    id_4 = 2 / 0;

    PROC procedimiento(FLOAT var1,FLOAT var1,FLOAT var1,FLOAT var1,FLOAT var1) NA = 3,SHADOWING = TRUE{
        var1 = 5;
    };
    PROC procedimiento(FLOAT var1,FLOAT var1,FLOAT var1,FLOAT var1,FLOAT var1){
        var1 = 5;
    };

    IF (id_1 !=10_l)
        id_1 = id_5 + 1;
    ELSE
        id_1 = id_6 + 1;
    ;

    WHILE (id_7 <= 10_l)
    {
        id_8 = id_9 + 1;
    };

$