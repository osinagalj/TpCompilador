1:                                     /% Casos de prueba Grupo 2 %/
2:      
3:      /% Programa sin errores. %/
4:      
5:          LONGINT x , y , z , f , l;
6:          FLOAT   w;
7:          x = 3_l;
8:          y = 5.0f+3;
9:          w =  3_l / 5.0f+3;
10:          id_1 = 2_l * 3_l;
11:          float_negativo = -7.3;
12:          longint_negativo = -711_l;
13:          x = 2_l - -3_l;
14:      
15:          PROC var (INT id2, INT id3) NA = 1_l , SHADOWING = TRUE
16:          {
17:              aux = 2_l;
18:              WHILE (id_1 <= 12.) LOOP
19:              {
20:                  IF (id_1 !=12.)
21:                     OUT ("cadena de caracteres");
22:                  ELSE
23:                      id_1 = id_1 + 1_l;
24:                  END_IF;
25:              };
26:          };
27:      
28:          var(id2,id3);
29:      
30:          IF (id_3 == 2_l + 3_l)
31:              id_2 = 4_l;
32:          END_IF;
33:      
34:      
35:      
36:      
37:      /% Errores Lexicos contemplados.%/
38:          FLOATH x , y , z ;
39:          x = 5;
40:          x = 2222222222_l;
41:          estavariabletienemuchoscaracteres = 22_l;
42:      
43:          % & #       /% Caracteres invalidos.%/
44:          
45:      
46:      /% Errores Sintacticos contemplados.%/
47:      
48:          x = 2147483648_l;
49:          y = ;
50:          id_3 = 2 / 0;
51:      
52:          PROC procedimiento(FLOAT var1,FLOAT var1,FLOAT var1,FLOAT var1,FLOAT var1) NA = 3,SHADOWING = TRUE{
53:              var1 = 5;
54:          };
55:          PROC procedimiento(FLOAT var1,FLOAT var1,FLOAT var1,FLOAT var1,FLOAT var1){
56:              var1 = 5;
57:          };
58:      
59:          IF (id_1 !=10_l)
60:              id_1 = id_1 + 1;
61:          ELSE
62:              id_1 = id_1 + 1;
63:          ;
64:      
65:          WHILE (id_1 <= 10_l)
66:          {
67:              id_1 = id_1 + 1;
68:          };
69:      
70:      $
