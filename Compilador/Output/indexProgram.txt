1:                                                      /% Group 2 %/
2:      
3:                                 /% ------------- Program without errors.  ------------------- %/
4:                                  /% ------------- Este lo estuve cambiando para probar lo de los ambitos  ------------------- %/
5:      
6:          LONGINT a , b , c , d ;
7:          FLOAT   x,y,z,w;
8:          LONGINT longint_negative;
9:          FLOAT   float_negative;
10:      
11:          a = 3_l;
12:          x = 5.0f+3;
13:          w =  3.3 +  5.0f+3;
14:          a = 2_l * 3_l;
15:          c = 5_l;
16:           b = 2_l - a / c;              /%ARREGLAR preguntar %/
17:          w = 4.5 + 3.3 + 4.2;
18:      
19:          float_negative = -7.3;
20:          longint_negative = -715_l;
21:          d = 2_l - -3_l;
22:      
23:      
24:          PROC aa (FLOAT p1) NA = 1_l , SHADOWING = TRUE
25:          {
26:                  FLOAT variable_adentro_proc1;
27:                  IF (e != p2)
28:                      FLOAT variable_adentro_if;
29:      
30:                     OUT ("cadena de caracteres 1");
31:                  ELSE
32:                      float_negative = float_negative - 1.;
33:                  END_IF;
34:      
35:                  PROC bb (FLOAT p2) NA = 1_l , SHADOWING = TRUE
36:                  {
37:                      FLOAT variable_1_1;
38:      
39:                      PROC cc (FLOAT p3) NA = 1_l , SHADOWING = TRUE
40:                      {
41:                          FLOAT variable_cc;
42:                      };
43:                  };
44:          };
45:      
46:          PROC dd (FLOAT p4, FLOAT p5) NA = 1_l , SHADOWING = TRUE
47:          {
48:              FLOAT e;
49:              e = 2.;
50:              WHILE (p4 <= 12.) LOOP
51:              {
52:                  e = e + 1.;
53:                  IF (e != p2)
54:                      LONGINT variable_kaka;
55:                     OUT ("cadena de caracteres 2");
56:                  ELSE
57:                      float_negative = float_negative - 1.;
58:                  END_IF;
59:              };
60:          };
61:      
62:          procedure_2(x,y);
63:      
64:      
65:      
66:      
67:      
68:      $
